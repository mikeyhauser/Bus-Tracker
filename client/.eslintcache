[{"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/index.js":"1","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/reportWebVitals.js":"2","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/App.js":"3","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Unassigned.js":"4","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Home.js":"5","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Breakdowns.js":"6","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Signup.js":"7","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Login.js":"8","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/Footer/index.js":"9","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/Header/index.js":"10","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/utils/queries.js":"11","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/utils/mutations.js":"12","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/utils/auth.js":"13","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/UnassignedList/index.js":"14","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/BreakdownList/index.js":"15","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/RosterStatus.js":"16","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Mainpage.js":"17","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/BreakdownsSubmissions.js":"18","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/Navbar/navbar.js":"19"},{"size":541,"mtime":1626533128142,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1626025305382,"results":"22","hashOfConfig":"21"},{"size":3025,"mtime":1626540383322,"results":"23","hashOfConfig":"21"},{"size":1043,"mtime":1626529940183,"results":"24","hashOfConfig":"21"},{"size":8484,"mtime":1626534825305,"results":"25","hashOfConfig":"21"},{"size":1011,"mtime":1626529749873,"results":"26","hashOfConfig":"21"},{"size":3699,"mtime":1626542487108,"results":"27","hashOfConfig":"21"},{"size":3354,"mtime":1626542249643,"results":"28","hashOfConfig":"21"},{"size":4421,"mtime":1626538022249,"results":"29","hashOfConfig":"21"},{"size":12822,"mtime":1626535768836,"results":"30","hashOfConfig":"21"},{"size":887,"mtime":1626138656707,"results":"31","hashOfConfig":"21"},{"size":1335,"mtime":1626138656707,"results":"32","hashOfConfig":"21"},{"size":1051,"mtime":1626536116728,"results":"33","hashOfConfig":"21"},{"size":1201,"mtime":1626138656704,"results":"34","hashOfConfig":"21"},{"size":1301,"mtime":1626138656704,"results":"35","hashOfConfig":"21"},{"size":1166,"mtime":1626544171273,"results":"36","hashOfConfig":"21"},{"size":1564,"mtime":1626539258649,"results":"37","hashOfConfig":"21"},{"size":862,"mtime":1626533128143,"results":"38","hashOfConfig":"21"},{"size":6422,"mtime":1626534640211,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ynmiqg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/index.js",[],["84","85"],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/reportWebVitals.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/App.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Unassigned.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Home.js",["86"],"import { createMedia } from '@artsy/fresnel'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Menu,\n  Segment,\n  Reveal,\n  Sidebar,\n  Visibility,\n} from 'semantic-ui-react';\n\n\n\n\n\n\nconst { MediaContextProvider, Media } = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024,\n  },\n})\n\n// HEADER COMPONENT\n\nconst HomepageHeading = ({ mobile }) => (\n  <Container text>\n    <Header\n      as='h1'\n      content='Imagine-a-Company'\n      inverted\n      style={{\n        fontSize: mobile ? '2em' : '4em',\n        fontWeight: 'normal',\n        marginBottom: 0,\n        marginTop: mobile ? '1.5em' : '3em',\n      }}\n    />\n    <Header\n      as='h2'\n      content='Do whatever you want when you want to.'\n      inverted\n      style={{\n        fontSize: mobile ? '1.5em' : '1.7em',\n        fontWeight: 'normal',\n        marginTop: mobile ? '0.5em' : '1.5em',\n      }}\n    />\n    <Button as ={ Link } to='/RosterStatus'primary size='huge'>\n\n       Roster Status\n      <Icon name='right arrow' />\n    </Button>\n  </Container>\n)\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool,\n}\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\n\n\n\n\n// NAV BAR COMPONENT\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n    return (\n      <Media greaterThan='mobile'>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 700, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? 'top' : null}\n              inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size='large'\n            >\n              {/* <Container>\n                <Menu.Item as='a' active>\n                  Home\n                </Menu.Item>\n                <Menu.Item as='a'>Work</Menu.Item>\n                <Menu.Item as='a'>Company</Menu.Item>\n                <Menu.Item as='a'>Careers</Menu.Item>\n                <Menu.Item position='right'>\n                  <Button as='a' inverted={!fixed}>\n                    Log in\n                  </Button>\n                  <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Container> */}\n            </Menu>\n            {/* <HomepageHeading /> */}\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Media>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Media as={Sidebar.Pushable} at='mobile'>\n        <Sidebar.Pushable>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={sidebarOpened}\n          >\n            <Menu.Item as='a' active>\n              Home\n            </Menu.Item>\n            <Menu.Item as='a'>Work</Menu.Item>\n            <Menu.Item as='a'>Company</Menu.Item>\n            <Menu.Item as='a'>Roster Status</Menu.Item>\n            {/* <Menu.Item as='a'>Log in</Menu.Item>\n            <Menu.Item as='a'>Sign Up</Menu.Item> */}\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={sidebarOpened}>\n            <Segment\n              inverted\n              textAlign='center'\n              style={{ minHeight: 350, padding: '1em 0em' }}\n              vertical\n            >\n              <Container>\n                <Menu inverted pointing secondary size='large'>\n                  <Menu.Item onClick={this.handleToggle}>\n                    <Icon name='sidebar' />\n                  </Menu.Item>\n                  <Menu.Item position='right'>\n                    <Button as='a' inverted>\n                      Log in\n                    </Button>\n                    <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                      Sign Up\n                    </Button>\n                  </Menu.Item>\n                </Menu>\n              </Container>\n              {/* <HomepageHeading mobile /> */}\n            </Segment>\n\n            {children}\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Media>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst ResponsiveContainer = ({ children }) => (\n  /* Heads up!\n   * For large applications it may not be best option to put all page into these containers at\n   * they will be rendered twice for SSR.\n   */\n  <MediaContextProvider>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </MediaContextProvider>\n)\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst HomepageLayout = () => (\n  <ResponsiveContainer >\n    <Segment style={{ padding: '8em 0em' }} vertical>\n      <Grid container stackable verticalAlign='middle'>\n        <Grid.Row>\n        <div>\n         <Container as='h1' style={{ fontSize: '4.33em' }} textAlign='center'>BUS TRACKER</Container>\n         <Divider horizontal>Find out more...</Divider>\n        </div>\n          <Grid.Column width={8}>\n            <Header color='yellow' as='h3' style={{ fontSize: '2em' }}>\n              Track That Bus\n            </Header>\n            <p style={{ fontSize: '1.33em' }} >\n              A mobile friendly bus tracking application for bus drivers and admin. Track your route in real time & don't let mechanical issues get you down!\n            </p>\n            <li>\n              View a roster of the students on your route\n            </li>\n            <li>\n              Keep a running attendance\n            </li>\n            <li>\n              Report mechanical issues in real time\n            </li>\n            <li>\n              View a report of outstanding route issues\n            </li>\n            <Header color='yellow' as='h3' style={{ fontSize: '2em' }}>\n              Route Tracking Has Never Been Easier\n            </Header>\n            <p style={{ fontSize: '1.33em' }}>\n              Sign up today by clicking the button below. If you're an existing user please login above. \n            </p>\n          </Grid.Column>\n          <Grid.Column floated='right' width={6}>\n\n          <Reveal animated='rotate'>\n    <Reveal.Content visible>\n      <Image circular size='large' src='busiconnontransparent.png' />\n    </Reveal.Content>\n    <Reveal.Content hidden>\n      <Image circular size='medium' src='boy.png' />\n    </Reveal.Content>\n  </Reveal>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column textAlign='center'>\n            <Button as ={ Link } to='/signup' color='yellow' size='huge'>Sign Up</Button>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n\n    <Segment style={{ padding: '0em' }} vertical>\n      <Grid celled='internally' columns='equal' stackable>\n        <Grid.Row textAlign='center'>\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n            <Header as='h3' style={{ fontSize: '2em' }}>\n              \"I love being able to track my bus.\"\n            </Header>\n            <p style={{ fontSize: '1.33em' }}>-Bus Driver</p>\n          </Grid.Column>\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n            <Header as='h3' style={{ fontSize: '2em' }}>\n              \"This Bus Tracker is the best thing since sliced bread.\"\n            </Header>\n            <p style={{ fontSize: '1.33em' }} >-Bus Driver</p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n\n\n  </ResponsiveContainer>\n)\n\nexport default HomepageLayout","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Breakdowns.js",["87"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { CURRENT_BREAKDOWNS, UNASSIGNED_STUDENTS } from '../utils/queries';\nimport BreakdownList from '../components/BreakdownList';\nimport { Redirect } from 'react-router-dom';\nimport Auth from '../utils/auth';\n// import UnassignedList from '../components/UnassignedList';\n\n\nconst Breakdowns = () => {\n  const { loading, data } = useQuery(CURRENT_BREAKDOWNS );\n  const breakdowns = data?.breakdowns || [];\n  const token = Auth.loggedIn() ? Auth.getToken() : null;\n  if(!token){\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div className=\"col-12 col-md-10 my-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <BreakdownList\n              breakdowns={breakdowns}\n              title=\"Here's the current list of breakdowns\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Breakdowns;\n","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Signup.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Login.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/Footer/index.js",["88","89"],"import React from 'react';\nimport { useLocation, useHistory, Link } from 'react-router-dom';\nimport { Container, List, Grid, Header, Button, Segment } from 'semantic-ui-react'\n\nconst Footer = () => {\n  // const location = useLocation();\n  const history = useHistory();\n  return (\n    // <footer className=\"w-100 mt-auto bg-secondary p-4\">\n    //   <div className=\"container text-center mb-5\">\n    //     {location.pathname !== '/' && (\n    //       <button\n    //         className=\"btn btn-dark mb-3\"\n    //         onClick={() => history.goBack()}\n    //       >\n    //         &larr; Go Back\n    //       </button>\n    //     )}\n    //     <h4>\n    //       Made with{' '}\n    //       <span\n    //         className=\"emoji\"\n    //         role=\"img\"\n    //         aria-label=\"heart\"\n    //         aria-hidden=\"false\"\n    //       >\n    //         ❤️\n    //       </span>{' '}\n    //       Mikey, Richard, Stevenson, and Hannah.\n    //     </h4>\n    //   </div>\n    // </footer>\n\n    <Segment inverted vertical style={{ padding: '5em 0em', color:'#FFE082' }}>\n    <Container>\n      <Grid divided inverted stackable>\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <Header inverted as='h4' content='Navigation' style={{ color:'#FFE082'}}/>\n            <List style={{ color:'#FFE082'}}link inverted>\n              <List.Item style={{ color:'#FFE082'}}as={Link} to='/signup'>Sign Up</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as={Link} to='/login'>Login</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as={Link} to='/'>Home</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as='a'>Contact</List.Item>\n              <Button color='yellow' content='Go Back' onClick={() => history.goBack()}>\n          </Button>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={3}>\n            <Header style={{ color:'#FFE082'}}inverted as='h4' content='Contributors' />\n            <List link inverted>\n              <List.Icon style={{ color:'#FFE082'}}name='github' size='large' verticalAlign='middle' />\n              <List.Item style={{ color:'#FFE082'}}as='a'href='https://github.com/sawhite110' target='blank'>Stevenson White II</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as='a'href='https://github.com/Hannybiggs' target='blank'>Hannah Biggam</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as='a'href='https://github.com/mikeyhauser'target='blank'>Mikey Hauser</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as='a'href='https://github.com/Vinyl77' target='blank'>Richard Yvarra</List.Item>\n              <List.Item style={{ color:'#FFE082'}} as='a'href='https://github.com/mikeyhauser/Bus-Tracker' target='blank'>Bus Tracker Repository</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={7}>\n            <Header style={{ color:'#FFE082'}} as='h1' inverted>\n              Bus Tracker\n            </Header>\n            <p>\n              Extra space for a call to action inside the footer that could help re-engage users.\n            </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n\n  </Segment>\n\n   \n\n   \n  );\n};\n\nexport default Footer;\n\n\n\n\n\n\n// Alternative style \n\n{/* <Segment inverted vertical style={{ padding: '5em 0em' }}>\n<Container>\n  <Grid divided inverted stackable>\n    <Grid.Row>\n      <Grid.Column width={3}>\n        <Header inverted as='h4' content='About' />\n        <List link inverted>\n          <List.Item as='a'>Sitemap</List.Item>\n          <List.Item as='a'>Contact Us</List.Item>\n          <List.Item as='a'>Religious Ceremonies</List.Item>\n          <List.Item as='a'>Gazebo Plans</List.Item>\n        </List>\n      </Grid.Column>\n      <Grid.Column width={3}>\n        <Header inverted as='h4' content='Services' />\n        <List link inverted>\n          <List.Item as='a'>Banana Pre-Order</List.Item>\n          <List.Item as='a'>DNA FAQ</List.Item>\n          <List.Item as='a'>How To Access</List.Item>\n          <List.Item as='a'>Favorite X-Men</List.Item>\n        </List>\n      </Grid.Column>\n      <Grid.Column width={7}>\n        <Header as='h4' inverted>\n          Footer Header\n        </Header>\n        <p>\n          Extra space for a call to action inside the footer that could help re-engage users.\n        </p>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n</Container>\n</Segment> */}","/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/Header/index.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/utils/queries.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/utils/mutations.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/utils/auth.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/UnassignedList/index.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/BreakdownList/index.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/RosterStatus.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/Mainpage.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/pages/BreakdownsSubmissions.js",[],"/Users/richardyvarra/Desktop/Accesibility/Bus-Tracker/client/src/components/Navbar/navbar.js",["90"],"import React, { Component } from 'react';\nimport { createMedia } from '@artsy/fresnel';\nimport PropTypes from 'prop-types';\nimport { \n    Menu,\n    Segment, \n    Button, \n    Visibility, \n    Container, \n    Sidebar, \n    Icon } from 'semantic-ui-react';\nimport { NavLink, Link } from 'react-router-dom';\n​\nconst { MediaContextProvider, Media } = createMedia({\n    breakpoints: {\n      mobile: 320,\n      tablet: 768,\n      computer: 992,\n      largeScreen: 1024,\n      wideScreen: 1920\n    },\n  });\n​\nexport default class Navbar extends Component {\n    state = {};\n    // state = { activeItem: 'home' };\n  \n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n​\n    hideFixedMenu = () => this.setState({ fixed: false });\n    showFixedMenu = () => this.setState({ fixed: true });\n  \n    render() {\n        const { children } = this.props;\n        const { activeItem, fixed } = this.state;\n  \n      return (\n        <Media greaterThan='mobile'>\n            <Visibility\n            once={false}\n            onBottomPassed={this.showFixedMenu}\n            onBottomPassedReverse={this.hideFixedMenu}\n            >\n            <Segment \n            basic\n            inverted\n            textAlign='center'\n            padded='very'\n            style={{ minHeight: 125, padding: '2em 1em' }}\n            vertical>\n                <Menu\n                    stackable\n                    fixed={fixed ? 'top' : null}\n                    inverted={!fixed}\n                    pointing={!fixed}\n                    secondary={!fixed}\n                    size='large'>\n                    <Menu.Item\n                        as={NavLink} to='/'\n                        name='home'\n                        active={activeItem === 'home'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Item\n                        as={NavLink} to='/breakdown'\n                        name='breakdown'\n                        active={activeItem === 'breakdown'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Item\n                        as={NavLink} to='/rosterStatus'\n                        name='rosterStatus'\n                        active={activeItem === 'rosterStatus'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Item\n                        as={NavLink} to='/unassigned'                    name='unassigned'\n                        active={activeItem === 'unassigned'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Item position='right'>\n                        <Button as={ Link } to='/Login' inverted={!fixed}>\n                            Log-in\n                        </Button>\n                        <Button as={ Link } to='/Signup' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n                            Sign Up\n                        </Button>\n                    </Menu.Item>\n                </Menu>\n            </Segment>\n            </Visibility>\n            {children}\n        </Media>\n      )\n    }\n  }\n​\n  class MobileContainer extends Component {\n    state = {};\n  \n    handleSidebarHide = () => this.setState({ sidebarOpened: false });\n  \n    handleToggle = () => this.setState({ sidebarOpened: true });\n  \n    render() {\n      const { children } = this.props;\n      const { sidebarOpened } = this.state;\n      const { activeItem } = this.state;\n  \n      return (\n        <Media as={Sidebar.Pushable} at='mobile'>\n          <Sidebar.Pushable>\n            <Sidebar\n              as={Menu}\n              animation='overlay'\n              icon='labeled'\n              inverted\n              onHide={this.handleSidebarHide}\n              vertical\n              visible={sidebarOpened}\n              width='thin'\n            >\n                <Menu.Item\n                    as={NavLink} to='/'\n                    name='home'\n                    active={activeItem === 'home'}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    as={NavLink} to='/breakdown'\n                    name='breakdown'\n                    active={activeItem === 'breakdown'}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    as={NavLink} to='/rosterStatus'\n                    name='rosterStatus'\n                    active={activeItem === 'rosterStatus'}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    as={NavLink} to='/unassigned'                    name='unassigned'\n                    active={activeItem === 'unassigned'}\n                    onClick={this.handleItemClick}\n                />\n            </Sidebar>\n  \n            <Sidebar.Pusher dimmed={sidebarOpened}>\n              <Segment\n                inverted\n                textAlign='center'\n                style={{ minHeight: 350, padding: '1em 0em' }}\n                vertical\n              >\n                <Container>\n                  <Menu inverted pointing secondary size='large'>\n                    <Menu.Item onClick={this.handleToggle}>\n                      <Icon name='sidebar' />\n                    </Menu.Item>\n                    <Menu.Item position='right'>\n                      <Button as= { Link } to='/Login' inverted>\n                        Log-in\n                      </Button>\n                      <Button as={ Link } to='/Signup' inverted style={{ marginLeft: '0.5em' }}>\n                        Sign Up\n                      </Button>\n                    </Menu.Item>\n                  </Menu>\n                </Container>\n              </Segment>\n  \n              {children}\n            </Sidebar.Pusher>\n          </Sidebar.Pushable>\n        </Media>\n      )\n    }\n  };\n  \n  MobileContainer.propTypes = {\n    children: PropTypes.node,\n  };\n  \n  const ResponsiveContainer = ({ children }) => (\n    /* Heads up!\n     * For large applications it may not be best option to put all page into these containers at\n     * they will be rendered twice for SSR.\n     */\n    <MediaContextProvider>\n      <MobileContainer>{children}</MobileContainer>\n    </MediaContextProvider>\n  );\n  \n  ResponsiveContainer.propTypes = {\n    children: PropTypes.node,\n  };\n\n",["91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":13,"column":3,"nodeType":"99","messageId":"100","endLine":13,"endColumn":7},{"ruleId":"97","severity":1,"message":"101","line":3,"column":30,"nodeType":"99","messageId":"100","endLine":3,"endColumn":49},{"ruleId":"97","severity":1,"message":"102","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":89,"column":1,"nodeType":"105","messageId":"106","endLine":122,"endColumn":15},{"ruleId":null,"fatal":true,"severity":2,"message":"107","line":13,"column":1},{"ruleId":"93","replacedBy":"108"},{"ruleId":"95","replacedBy":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'UNASSIGNED_STUDENTS' is defined but never used.","'useLocation' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Parsing error: Unexpected character '​'.\n\n\u001b[0m \u001b[90m 11 |\u001b[39m     \u001b[33mIcon\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'semantic-ui-react'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mNavLink\u001b[39m\u001b[33m,\u001b[39m \u001b[33mLink\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'react-router-dom'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m ​\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m \u001b[36mconst\u001b[39m { \u001b[33mMediaContextProvider\u001b[39m\u001b[33m,\u001b[39m \u001b[33mMedia\u001b[39m } \u001b[33m=\u001b[39m createMedia({\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m     breakpoints\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m       mobile\u001b[33m:\u001b[39m \u001b[35m320\u001b[39m\u001b[33m,\u001b[39m\u001b[0m",["110"],["111"],"no-global-assign","no-unsafe-negation"]
