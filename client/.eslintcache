[{"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\index.js":"1","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\App.js":"3","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\BreakdownsSubmissions.js":"4","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Unassigned.js":"5","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Breakdowns.js":"6","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\RosterStatus.js":"7","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Home.js":"8","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Mainpage.js":"9","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Signup.js":"10","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Login.js":"11","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\Footer\\index.js":"12","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\Header\\index.js":"13","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\utils\\mutations.js":"14","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\utils\\queries.js":"15","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\utils\\auth.js":"16","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\UnassignedList\\index.js":"17","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\BreakdownList\\index.js":"18","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\RouteSelector\\index.js":"19","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\Navbar\\navbar.js":"20"},{"size":541,"mtime":1626293584168,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1624298878303,"results":"23","hashOfConfig":"22"},{"size":3022,"mtime":1626736003057,"results":"24","hashOfConfig":"22"},{"size":2665,"mtime":1626733675305,"results":"25","hashOfConfig":"22"},{"size":1043,"mtime":1626534150098,"results":"26","hashOfConfig":"22"},{"size":1330,"mtime":1626733583010,"results":"27","hashOfConfig":"22"},{"size":2694,"mtime":1626734403121,"results":"28","hashOfConfig":"22"},{"size":3159,"mtime":1626733047344,"results":"29","hashOfConfig":"22"},{"size":5872,"mtime":1626735323237,"results":"30","hashOfConfig":"22"},{"size":3699,"mtime":1626725076866,"results":"31","hashOfConfig":"22"},{"size":3354,"mtime":1626725076865,"results":"32","hashOfConfig":"22"},{"size":4421,"mtime":1626725076860,"results":"33","hashOfConfig":"22"},{"size":12822,"mtime":1626725076861,"results":"34","hashOfConfig":"22"},{"size":1505,"mtime":1626734460313,"results":"35","hashOfConfig":"22"},{"size":1056,"mtime":1626734513385,"results":"36","hashOfConfig":"22"},{"size":1051,"mtime":1626725076867,"results":"37","hashOfConfig":"22"},{"size":1129,"mtime":1626733514661,"results":"38","hashOfConfig":"22"},{"size":1932,"mtime":1626733341964,"results":"39","hashOfConfig":"22"},{"size":2787,"mtime":1626733473019,"results":"40","hashOfConfig":"22"},{"size":6677,"mtime":1626736218119,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1n4ra6y",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\index.js",[],["90","91"],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\App.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\BreakdownsSubmissions.js",["92","93","94","95"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { REPORT_BREAKDOWN, BUS_STATUS } from '../utils/mutations'\r\nimport { Container, Form, TextArea, Header, Image, Input, Button } from 'semantic-ui-react'\r\nfunction BreakdownSubmissions() {\r\n    const [busNumber, setBus] = useState(0);\r\n    const [mechanicalProblem, setProblem] = useState('');\r\n    const [dateOfBreakdown, setDate] = useState('');\r\n    const [submitBreakdown, { error }] = useMutation(REPORT_BREAKDOWN);\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(busNumber, mechanicalProblem, dateOfBreakdown)\r\n    \r\n        try {\r\n          const { data } = await submitBreakdown({\r\n            variables: { busNumber, mechanicalProblem, dateOfBreakdown },\r\n          });\r\n    \r\n          window.location.reload();\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n    return <div>\r\n        <Container>\r\n            <Header textAlign='center' as='h1'>\r\n                <Image src=\"busicon.png\" alt=\"Bus\" />\r\n        BREAKDOWN SUBMISSION\r\n      <Header.Subheader>\r\n                    Enter your mechanical issue below.\r\n     </Header.Subheader>\r\n            </Header>\r\n        \r\n            <Header>\r\n                Bus Number\r\n</Header>\r\n            <Input\r\n                fluid icon='bus'\r\n                placeholder='Enter bus number here...'\r\n                value={busNumber}\r\n                name=\"busNumber\"\r\n                type=\"number\"\r\n                onChange={e=>setBus(parseInt(e.target.value))}\r\n            />\r\n            <Header>\r\n                Date\r\n</Header>\r\n            <Input fluid icon='calendar alternate outline' placeholder='MM - DD - YYYY'\r\n                value={dateOfBreakdown}\r\n                name=\"dateOfBreakdown\"\r\n                type=\"string\"\r\n                onChange={e=>setDate(e.target.value)}\r\n            />\r\n            <Header>\r\n                Issue\r\n</Header>\r\n            <Form>\r\n                <TextArea placeholder='Please provide a brief description of the issue'\r\n                    value={mechanicalProblem}\r\n                    name=\"mechanicalProblem\"\r\n                    type=\"string\"\r\n                    onChange={e=>setProblem(e.target.value)}\r\n                />\r\n            </Form>\r\n            <Button fluid compact color='yellow'\r\n            onClick={() => submitBreakdown({ variables: { busNumber: busNumber, mechanicalProblem: mechanicalProblem, dateOfBreakdown: dateOfBreakdown} }\r\n                )}\r\n            >Submit</Button>\r\n        </Container>\r\n    </div>\r\n}\r\nexport default BreakdownSubmissions;","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Unassigned.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Breakdowns.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\RosterStatus.js",["96","97"],"// import React from 'react'\n// import { List, Header, Segment, Input } from 'semantic-ui-react'\n// import { useQuery } from '@apollo/client';\n// import { CURRENT_ROSTER } from '../utils/queries'\n// import { Redirect } from 'react-router-dom';\n// import Auth from '../utils/auth';\n\n\n// const RosterStatus = () => {\n\n//   const { loading, data } = useQuery(CURRENT_ROSTER, {\n//     variables: { busNumber: 332 }\n//   })\n//   const token = Auth.loggedIn() ? Auth.getToken() : null;\n//   if(!token){\n//     return <Redirect to=\"/login\" />;\n//   }\n\n//   // const roster = data?.roster || [];\n//   console.log(data)\n\n//   const renderStudents = () => {\n//     console.log(data)\n//     return data.currentRoster.map((s) => {\n//       return <List>\n//                 <List.Content>\n//                   <List.Header>{s.name}</List.Header>\n//                   Contact:{s.contact}\n//                 </List.Content>\n//               </List>\n//     })\n//   };\n\n//   if (data === undefined) {\n//     return <h1>{loading}</h1>\n//   }\n//   return <div>\n//     <Input action='submit' placeholder='Enter Bus Here'/>\n//     <Header block>ROSTER STATUS:</Header>\n//     <Segment>\n\n//       <List celled> {renderStudents()} </List>\n\n//     </Segment>\n//   </div>\n// }\n// export default RosterStatus\n\n\n\nimport React, { useState } from 'react';\nimport { List, Header, Segment } from 'semantic-ui-react'\nimport { useLazyQuery } from '@apollo/client';\nimport { CURRENT_ROSTER  } from '../utils/queries'\nimport { Redirect } from 'react-router-dom';\nimport Auth from '../utils/auth';\nfunction RosterStatus () {\n    const [busNumber, setBus] = useState(0);\n    const [search, {loading, data}] = useLazyQuery(CURRENT_ROSTER);\n  const token = Auth.loggedIn() ? Auth.getToken() : null;\n  if(!token){\n    return <Redirect to=\"/login\" />;\n  }\n    console.log(data)\n    const searchData = data?.currentRoster || [];\n  return <div>\n      \n      <p>\n        BUS IN USE:\n      </p>\n      <div className=\"form\">\n        <input\n          value={busNumber}\n          name=\"busNumber\"\n          onChange={e=>setBus(parseInt(e.target.value))}\n          type=\"number\"\n          placeholder=\"Enter Your Bus\"\n        />\n       \n        <button onClick={() => search({ variables: { busNumber: busNumber} }\n        )}>SUBMIT\n          </button>\n      </div>\n    <Header block>ROSTER STATUS:</Header>\n    <Segment>\n    {searchData &&\n          searchData.map((Student) => (\n            <div key={Student._id} className=\"col-12 col-xl-6\">\n              <Segment color = 'yellow' padded textAlign='center'>Student: {Student.name}</Segment>\n            \n            </div>\n          ))}\n    </Segment>\n  </div>\n}\nexport default RosterStatus","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Home.js",["98","99","100"],"import { createMedia } from '@artsy/fresnel'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Image,\n  Segment,\n  Reveal,\n} from 'semantic-ui-react';\n\n\n\nconst HomepageLayout = () => (\n  <Container >\n    <Segment style={{ padding: '8em 0em' }} vertical>\n      <Grid container stackable verticalAlign='middle'>\n        <Grid.Row>\n        <div>\n         <Container as='h1' style={{ fontSize: '4.33em' }} textAlign='center'>BUS TRACKER</Container>\n         <Divider horizontal>Find out more...</Divider>\n        </div>\n          <Grid.Column width={8}>\n            <Header color='yellow' as='h3' style={{ fontSize: '2em' }}>\n              Track That Bus\n            </Header>\n            <p style={{ fontSize: '1.33em' }} >\n              A mobile friendly bus tracking application for bus drivers and admin. Track your route in real time & don't let mechanical issues get you down!\n            </p>\n            <li>\n              View a roster of the students on your route\n            </li>\n            <li>\n              Keep a running attendance\n            </li>\n            <li>\n              Report mechanical issues in real time\n            </li>\n            <li>\n              View a report of outstanding route issues\n            </li>\n            <Header color='yellow' as='h3' style={{ fontSize: '2em' }}>\n              Route Tracking Has Never Been Easier\n            </Header>\n            <p style={{ fontSize: '1.33em' }}>\n              Sign up today by clicking the button below. If you're an existing user please login above. \n            </p>\n          </Grid.Column>\n          <Grid.Column floated='right' width={6}>\n          <Reveal animated='rotate'>\n    <Reveal.Content visible>\n      <Image circular size='large' src='busiconnontransparent.png' />\n    </Reveal.Content>\n    <Reveal.Content hidden>\n      <Image circular size='medium' src='boy.png' />\n    </Reveal.Content>\n  </Reveal>\n          </Grid.Column >\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column textAlign='center'>\n            <Button as ={ Link } to='/signup' color='yellow' size='huge'>Sign Up</Button>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n\n    <Segment style={{ padding: '0em' }} vertical>\n      <Grid celled='internally' columns='equal' stackable>\n        <Grid.Row textAlign='center'>\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n            <Header as='h3' style={{ fontSize: '2em' }}>\n              \"I love being able to track my bus.\"\n            </Header>\n            <p style={{ fontSize: '1.33em' }}>-Bus Driver</p>\n          </Grid.Column>\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n            <Header as='h3' style={{ fontSize: '2em' }}>\n              \"This Bus Tracker is the best thing since sliced bread.\"\n            </Header>\n            <p style={{ fontSize: '1.33em' }} >-Bus Driver</p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n\n\n  </Container>\n)\n\nexport default HomepageLayout","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Mainpage.js",["101","102","103"],"// import React from 'react'\n// import { Header, Image, Segment, Icon, Input, Grid, Form, Button } from 'semantic-ui-react'\n// import { Redirect } from 'react-router-dom'\n// import Auth from '../utils/auth'\n\n\n\n\n\n\n\n// const Mainpage = () => {\n//     const token = Auth.loggedIn() ? Auth.getToken() : null;\n//   if(!token){\n//     return <Redirect to=\"/login\" />;\n//   }\n\n    \n   \n// return(\n// <div>\n\n// {/* FULL SCREEN  */}\n\n// <Header textAlign='center' as='h1'>\n//         <Image src=\"busicon.png\" alt=\"Bus\" />\n//         PICK-UP LIST\n//       <Header.Subheader>\n//       Manage your route below.\n//      </Header.Subheader>\n//     </Header>\n\n//     <Segment inverted color='yellow'>\n//         <Header as='h2' textAlign='center'>\n//         Bus Number\n//         </Header>\n//         <Header as='h4' textAlign='center'>\n//         <Input action='Submit' placeholder='Enter Bus Number' />\n//         </Header>\n//     </Segment>\n\n\n// <Grid celled>\n//     <Grid.Row>\n//       <Grid.Column width={5}>\n//       <Segment raised>\n//       <Header textAlign='center' as='h3'>\n//         STOP NAME  \n//         <i padding=\"a lot\" class=\"circular map signs icon\"></i>\n//     </Header>\n//     <Segment>\n//     <Header textAlign='center' as='h3'>\n//         First Street\n//     </Header>\n//     </Segment>\n// </Segment>\n//       </Grid.Column>\n//       <Grid.Column width={11}>\n//       <Segment.Group>\n//       <h2 class=\"ui center aligned icon header\">\n//   <i class=\"circular users icon\"></i>\n//   STUDENTS\n// </h2>\n//     <Segment color = 'yellow' padded textAlign='center'>Student Name 1</Segment>\n//     <Segment color = 'black' padded textAlign='center'>Student Name 2</Segment>\n//     <Segment color = 'yellow' padded textAlign='center'>Student Name 3</Segment>\n//     <Segment color = 'black' padded textAlign='center'>Student Name 4</Segment>\n//     <Segment color = 'yellow' padded textAlign='center'>Student Name 5</Segment>\n//   </Segment.Group>\n//       </Grid.Column>\n//     </Grid.Row>\n\n//     <Grid.Row>\n//       <Grid.Column color=\"yellow\" width={2}>\n//       <Button icon basic color=\"black\">\n//             <Icon size=\"huge\" basic color=\"black\" name='arrow alternate circle left outline' />\n//         </Button>\n//       </Grid.Column>\n//       <Grid.Column color=\"yellow\" width={12}>\n//       </Grid.Column>\n//       <Grid.Column color=\"yellow\" width={2}>\n//       <Button icon basic color=\"black\">\n//             <Icon size=\"huge\" basic color=\"black\" name='arrow alternate circle right outline' />\n//         </Button>\n//       </Grid.Column>\n//     </Grid.Row>\n//   </Grid>\n\n\n\n// {/* MOBILE VIEW */}\n\n//     <Header textAlign='center' as='h1'>\n//         <Image src=\"busicon.png\" alt=\"Bus\" />\n//         PICK-UP LIST\n//       <Header.Subheader>\n//       Manage your route below.\n//      </Header.Subheader>\n//     </Header>\n\n// <Segment raised inverted color='yellow'>\n//         <Header as='h2' textAlign='center'>\n//         Bus Number\n//         </Header>\n//         <Header as='h4' textAlign='center'>\n//         <Input action='Submit' placeholder='Enter Bus Number' />\n//         </Header>\n//     </Segment>\n\n// {/* <Segment raised>\n//     <Header textAlign='center' as='h3'>\n//         Stop Name\n//     </Header>\n// </Segment> */}\n\n// <Segment raised>\n// <Header textAlign='center' as='h3'>\n//         STOP NAME  \n//         <i padding=\"a lot\" class=\"circular map signs icon\"></i>\n//     </Header>\n//     <Segment raised>\n//     <Header textAlign='center' as='h3'>\n//         First Street\n//     </Header>\n//     </Segment>\n// </Segment>\n\n\n\n// <Segment.Group raised>\n// <h3 class=\"ui center aligned icon header\">\n//   <i class=\"circular users icon\"></i>\n//   STUDENTS\n// </h3>\n//     <Segment color = 'yellow' padded textAlign='center'>Student Name 1</Segment>\n//     <Segment color = 'black' padded textAlign='center'>Student Name 2</Segment>\n//     <Segment color = 'yellow' padded textAlign='center'>Student Name 3</Segment>\n//     <Segment color = 'black' padded textAlign='center'>Student Name 4</Segment>\n//     <Segment color = 'yellow' padded textAlign='center'>Student Name 5</Segment>\n//   </Segment.Group>\n\n//   <Segment.Group raised horizontal>\n//     <Segment inverted color=\"yellow\">\n//     <Button icon basic color=\"black\">\n//             <Icon size=\"huge\" basic color=\"black\" name='arrow alternate circle left outline' />\n//     </Button>\n//     </Segment>\n//     <Segment inverted color=\"yellow\">\n//         <Header textAlign='center' as='h2'>\n//         </Header>\n//     </Segment>\n//     <Segment inverted color=\"yellow\" textAlign=\"right\">\n//         <Button icon basic color=\"black\">\n//             <Icon size=\"huge\" basic color=\"black\" name='arrow alternate circle right outline' />\n//         </Button>\n//     </Segment>\n//   </Segment.Group>\n\n\n//   {/* <Grid.Row>\n//       <Grid.Column color=\"yellow\" width={2}>\n//       <Button icon basic color=\"black\">\n//             <Icon size=\"huge\" basic color=\"black\" name='arrow alternate circle left outline' />\n//         </Button>\n//       </Grid.Column>\n//       <Grid.Column color=\"yellow\" width={12}>\n//       </Grid.Column>\n//       <Grid.Column color=\"yellow\" width={2}>\n//       <Button icon basic color=\"black\">\n//             <Icon size=\"huge\" basic color=\"black\" name='arrow alternate circle right outline' />\n//         </Button>\n//       </Grid.Column>\n//     </Grid.Row> */}\n\n// </div>\n// )\n// }\n\n\n\n\n// export default Mainpage;\n\n\n\n\n\n\nimport React from 'react'\nimport { Header, Image, Segment, Icon, Input } from 'semantic-ui-react'\nimport RouteSelector from '../components/RouteSelector';\nconst Mainpage = () => (\n<div>\n    <Header textAlign='center' as='h1'>\n        <Image src=\"busicon.png\" alt=\"Bus\" />\n        PICK-UP LIST\n      <Header.Subheader>\n      Manage your route below.\n     </Header.Subheader>\n    </Header>\n<RouteSelector />\n</div>\n)\nexport default Mainpage;","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\pages\\Login.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\Footer\\index.js",["104","105"],"import React from 'react';\nimport { useLocation, useHistory, Link } from 'react-router-dom';\nimport { Container, List, Grid, Header, Button, Segment } from 'semantic-ui-react'\n\nconst Footer = () => {\n  // const location = useLocation();\n  const history = useHistory();\n  return (\n    // <footer className=\"w-100 mt-auto bg-secondary p-4\">\n    //   <div className=\"container text-center mb-5\">\n    //     {location.pathname !== '/' && (\n    //       <button\n    //         className=\"btn btn-dark mb-3\"\n    //         onClick={() => history.goBack()}\n    //       >\n    //         &larr; Go Back\n    //       </button>\n    //     )}\n    //     <h4>\n    //       Made with{' '}\n    //       <span\n    //         className=\"emoji\"\n    //         role=\"img\"\n    //         aria-label=\"heart\"\n    //         aria-hidden=\"false\"\n    //       >\n    //         ❤️\n    //       </span>{' '}\n    //       Mikey, Richard, Stevenson, and Hannah.\n    //     </h4>\n    //   </div>\n    // </footer>\n\n    <Segment inverted vertical style={{ padding: '5em 0em', color:'#FFE082' }}>\n    <Container>\n      <Grid divided inverted stackable>\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <Header inverted as='h4' content='Navigation' style={{ color:'#FFE082'}}/>\n            <List style={{ color:'#FFE082'}}link inverted>\n              <List.Item style={{ color:'#FFE082'}}as={Link} to='/signup'>Sign Up</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as={Link} to='/login'>Login</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as={Link} to='/'>Home</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as='a'>Contact</List.Item>\n              <Button color='yellow' content='Go Back' onClick={() => history.goBack()}>\n          </Button>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={3}>\n            <Header style={{ color:'#FFE082'}}inverted as='h4' content='Contributors' />\n            <List link inverted>\n              <List.Icon style={{ color:'#FFE082'}}name='github' size='large' verticalAlign='middle' />\n              <List.Item style={{ color:'#FFE082'}}as='a'href='https://github.com/sawhite110' target='blank'>Stevenson White II</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as='a'href='https://github.com/Hannybiggs' target='blank'>Hannah Biggam</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as='a'href='https://github.com/mikeyhauser'target='blank'>Mikey Hauser</List.Item>\n              <List.Item style={{ color:'#FFE082'}}as='a'href='https://github.com/Vinyl77' target='blank'>Richard Yvarra</List.Item>\n              <List.Item style={{ color:'#FFE082'}} as='a'href='https://github.com/mikeyhauser/Bus-Tracker' target='blank'>Bus Tracker Repository</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={7}>\n            <Header style={{ color:'#FFE082'}} as='h1' inverted>\n              Bus Tracker\n            </Header>\n            <p>\n              Extra space for a call to action inside the footer that could help re-engage users.\n            </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n\n  </Segment>\n\n   \n\n   \n  );\n};\n\nexport default Footer;\n\n\n\n\n\n\n// Alternative style \n\n{/* <Segment inverted vertical style={{ padding: '5em 0em' }}>\n<Container>\n  <Grid divided inverted stackable>\n    <Grid.Row>\n      <Grid.Column width={3}>\n        <Header inverted as='h4' content='About' />\n        <List link inverted>\n          <List.Item as='a'>Sitemap</List.Item>\n          <List.Item as='a'>Contact Us</List.Item>\n          <List.Item as='a'>Religious Ceremonies</List.Item>\n          <List.Item as='a'>Gazebo Plans</List.Item>\n        </List>\n      </Grid.Column>\n      <Grid.Column width={3}>\n        <Header inverted as='h4' content='Services' />\n        <List link inverted>\n          <List.Item as='a'>Banana Pre-Order</List.Item>\n          <List.Item as='a'>DNA FAQ</List.Item>\n          <List.Item as='a'>How To Access</List.Item>\n          <List.Item as='a'>Favorite X-Men</List.Item>\n        </List>\n      </Grid.Column>\n      <Grid.Column width={7}>\n        <Header as='h4' inverted>\n          Footer Header\n        </Header>\n        <p>\n          Extra space for a call to action inside the footer that could help re-engage users.\n        </p>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n</Container>\n</Segment> */}","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\utils\\queries.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\utils\\auth.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\UnassignedList\\index.js",[],"C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\BreakdownList\\index.js",["106","107","108"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_BREAKDOWN } from '../../utils/mutations'\nconst BreakdownList = ({ breakdowns, title }) => {\n  function reload(){\n    window.location.reload()\n  }\n  const [search, {loading}] = useMutation(DELETE_BREAKDOWN);\n    // .then(window.location.reload()\n    // )\n    \n  return (\n    <div>\n      <h3 className=\"text-primary\">{title}</h3>\n      <div className=\"flex-row justify-space-between my-4\">\n        {breakdowns &&\n          breakdowns.map((breakdown) => (\n            <div key={breakdown._id} className=\"col-12 col-xl-6\">\n              <div className=\"card mb-3\">\n                <h4 className=\"card-header bg-dark text-light p-2 m-0\">\n                  Bus Number: {breakdown.busNumber} <br/>\n                  Breakdown: {breakdown.mechanicalProblem} <br/>\n                  Date of Breakdown: {breakdown.dateOfBreakdown} <br/>\n                  <button onClick={() => search({ variables: {  busNumber: breakdown.busNumber} }\n         )\n        //  , () => window.location.reload()\n        }>DELETE\n          </button>\n             {/* <button onClick={() => search({ variables: { order: parseInt(stop), route: routeNumber} }\n        )}>BRING BUS BACK ONLINE\n          </button> */}\n                  {/* Assigned Mechanic: {assignedMechanic}<br/>\n                  Parts Ordered: {partsOrdered}<br/>\n                  Projected Completion: {projectedCompletion}<br/> */}\n                \n                  {/* <span className=\"text-white\" style={{ fontSize: '1rem' }}>\n                    currently has {breakdowns ? breakdowns.length : 0}{' '}\n                    endorsed skill\n                    {breakdowns.skills && profile.skills.length === 1 ? '' : 's'}\n                  </span> */}\n                </h4>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default BreakdownList;","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\RouteSelector\\index.js",["109"],"import React, { useState } from 'react';\r\nimport { Header, Segment } from 'semantic-ui-react'\r\nimport {  useLazyQuery, useMutation } from '@apollo/client';\r\nimport { CURRENT_STOP, MISSING_STUDENTS } from '../../utils/queries'\r\nimport {  STUDENT_STATUS } from '../../utils/mutations'\r\nfunction RouteSelector() {\r\n  let [stop, setStop] = useState(1);\r\n  const [routeNumber, setRoute] = useState(0);\r\n  const [search, {loading, data}] = useLazyQuery(CURRENT_STOP);\r\n  const [missingStudents, { data: missingStudentsData}] = useLazyQuery(MISSING_STUDENTS);\r\n  const [missedBus, { data: missedBusData}] = useMutation(STUDENT_STATUS);\r\n  \r\n  // ******stop selector below\r\n  const nextStop = () => {\r\n    setStop(parseInt(stop + 1));\r\n    console.log(`Current Stop: ${stop}`);\r\n    \r\n  };\r\n  const previousStop = () => {\r\n    if (stop > 1) {\r\n      setStop(parseInt(stop - 1));\r\n      console.log(`Current Stop: ${stop}`);   \r\n    }   \r\n  };\r\n  console.log(typeof(routeNumber))\r\n  console.log(typeof(stop))\r\n  const searchData = data?.currentStop || [];\r\n  console.log(searchData)\r\n  console.log(missedBusData)\r\n  console.log(missingStudentsData)\r\n  \r\n  if (loading) return <p>Loading ...</p>;\r\n  return (\r\n    <div>\r\n       <p>\r\n        BUS IN USE:\r\n      </p>\r\n      <div className=\"form\">\r\n        <input\r\n          value={routeNumber}\r\n          name=\"busNumber\"\r\n          onChange={e=>setRoute(parseInt(e.target.value))}\r\n          type=\"number\"\r\n          placeholder=\"Enter Your Bus\"\r\n        />\r\n       \r\n        <button onClick={() => search({ variables: { order: parseInt(stop), route: routeNumber} }\r\n        )}>SUBMIT\r\n          </button>\r\n      </div>\r\n     \r\n      <div className=\"card text-center\">\r\n      <div className=\"card-body\">\r\n     \r\n        <p className=\"card-text\">CURRENT STOP: {stop}</p>\r\n        <Header textAlign='center' as='h2'>\r\n        {searchData.location}\r\n    </Header>\r\n      \r\n      \r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={previousStop}>\r\n          PREVIOUS STOP\r\n        </button>\r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={nextStop\r\n        }>\r\n          NEXT STOP\r\n        </button>\r\n      \r\n        <Segment.Group>\r\n        {searchData.students &&\r\n          searchData.students.map((student) => (\r\n            <div key={student._id} className=\"col-12 col-xl-6\">\r\n              <Segment color = 'yellow' padded textAlign='center'>\r\n                STUDENT: {student}\r\n                \r\n              <button onClick={() => missedBus({ variables: { name: student, missedBus: false} }\r\n        )}>ON BUS\r\n          </button>\r\n          </Segment>\r\n            \r\n            </div>\r\n          ))}\r\n  </Segment.Group>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default RouteSelector;","C:\\Users\\Hanny Biggsmen\\Desktop\\Bus Tracker\\Bus-Tracker\\client\\src\\components\\Navbar\\navbar.js",["110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":3,"column":28,"nodeType":"117","messageId":"118","endLine":3,"endColumn":38},{"ruleId":"115","severity":1,"message":"119","line":9,"column":31,"nodeType":"117","messageId":"118","endLine":9,"endColumn":36},{"ruleId":"115","severity":1,"message":"120","line":10,"column":11,"nodeType":"117","messageId":"118","endLine":10,"endColumn":27},{"ruleId":"115","severity":1,"message":"121","line":15,"column":19,"nodeType":"117","messageId":"118","endLine":15,"endColumn":23},{"ruleId":"115","severity":1,"message":"122","line":52,"column":10,"nodeType":"117","messageId":"118","endLine":52,"endColumn":14},{"ruleId":"115","severity":1,"message":"123","line":59,"column":21,"nodeType":"117","messageId":"118","endLine":59,"endColumn":28},{"ruleId":"115","severity":1,"message":"124","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":21},{"ruleId":"115","severity":1,"message":"125","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":17},{"ruleId":"115","severity":1,"message":"126","line":4,"column":17,"nodeType":"117","messageId":"118","endLine":4,"endColumn":26},{"ruleId":"115","severity":1,"message":"127","line":190,"column":25,"nodeType":"117","messageId":"118","endLine":190,"endColumn":32},{"ruleId":"115","severity":1,"message":"128","line":190,"column":34,"nodeType":"117","messageId":"118","endLine":190,"endColumn":38},{"ruleId":"115","severity":1,"message":"129","line":190,"column":40,"nodeType":"117","messageId":"118","endLine":190,"endColumn":45},{"ruleId":"115","severity":1,"message":"130","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":89,"column":1,"nodeType":"133","messageId":"134","endLine":122,"endColumn":15},{"ruleId":"115","severity":1,"message":"135","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"136","line":5,"column":12,"nodeType":"117","messageId":"118","endLine":5,"endColumn":18},{"ruleId":"115","severity":1,"message":"123","line":8,"column":19,"nodeType":"117","messageId":"118","endLine":8,"endColumn":26},{"ruleId":"115","severity":1,"message":"137","line":10,"column":10,"nodeType":"117","messageId":"118","endLine":10,"endColumn":25},{"ruleId":"115","severity":1,"message":"138","line":24,"column":9,"nodeType":"117","messageId":"118","endLine":24,"endColumn":15},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'BUS_STATUS' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","'data' is assigned a value but never used.","'List' is defined but never used.","'loading' is assigned a value but never used.","'createMedia' is defined but never used.","'PropTypes' is defined but never used.","'Component' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","'Input' is defined but never used.","'useLocation' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","'reload' is defined but never used.","'missingStudents' is assigned a value but never used.","'logout' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]